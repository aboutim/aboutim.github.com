<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[使用 PowerCLI 批量获取 VMX 并注册到 VC 清单中]]></title>
      <url>/2017/07/17/powecli-register-datastore-vmx/</url>
      <content type="html"><![CDATA[<h2 id="适合场景"><a href="#适合场景" class="headerlink" title="适合场景"></a>适合场景</h2><ul>
<li>存储搬迁到别的机房，VM 计划性停机，使用需要批量的把 VM 注册到新机房的计算资源池中。</li>
<li>适合找出没有注册到VC指定位置中的非活动 VM</li>
</ul>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ol>
<li><p>获取 Datastore 的信息 ，示例是获取集群内的 Datastore</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$Datastoreinfo =  Get-Datastore -Nmae &apos;DatastoreName&apos; | %&#123;Get-View $_.Id&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>处理 Datastore 的信息</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$DsBrowser = Get-View $Datastoreinfo.browser</div></pre></td></tr></table></figure>
</li>
<li><p>新建搜索对象，附加搜索条件</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$SearchSpec = New-Object VMware.Vim.HostDatastoreBrowserSearchSpec</div><div class="line">$SearchSpec.matchpattern = &quot;*.vmx&quot;</div><div class="line">$DsPath = &quot;[&quot; + $Datastoreinfo.Name + &quot;]&quot;</div></pre></td></tr></table></figure>
</li>
<li><p>搜索并展现</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$SearchResult = $DsBrowser.SearchDatastoreSubFolders($DsPath, $SearchSpec) | where &#123;$_.FolderPath -notmatch &quot;.snapshot&quot;&#125; | %&#123;$.FolderPath + ($_.File | select Path).Path&#125;</div></pre></td></tr></table></figure>
<p> 最终输出的结果为</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[datastorename] VMnameFolder/VMname.vmx</div></pre></td></tr></table></figure>
</li>
<li><p>注册VM</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">New-VM -Name $VMname -VMFilePath $VMXpath -ResourcePool $vmhost -Location $VMFolder -RunAsync</div></pre></td></tr></table></figure>
</li>
</ol>
<p>*如果 VM 名称曾经修改过，又没有做过 XvMotion (storeger vMotion) VMnameFolder以及目录下所有的VM文件，还是原来旧的 VMname 命名。</p>
<h2 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h2><ul>
<li>可套用 foreach 循环，对多个 Datastore 进行检索VMX文件</li>
<li>如果是场景1，可在 VM 是注册状态下，使用 PowerCLI 直接获取 VMX_PATH 路径以及对应的 VMname，位置信息等，导出为表，将来可使用 PowerCLI 根据表的信息进行注册。</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 虚拟化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> PowerCLI </tag>
            
            <tag> VMWare运维 </tag>
            
            <tag> VMX </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[解决 vCSA 6.0 vphere-web-client-页面无法打开]]></title>
      <url>/2016/11/15/vcsa-web-client-svc/</url>
      <content type="html"><![CDATA[<h3 id="故障描述"><a href="#故障描述" class="headerlink" title="故障描述"></a>故障描述</h3><p>5.5 版本 VMWare 就提倡用 web-client ，但是 web-client 的响应时间以及被动刷新真的很让人捉急，因此大部分人还是喜欢用 vsphere-client for desktop 。前端发现web-client无法打开，但是：5480 后台以及引导页面还是可以打开的。也就是<a href="https://#you-vc#" target="_blank" rel="external">https://#you-vc#</a> /vsphere-client/?csp<br>初步估计是 VC 的 web 服务异常了</p>
<h3 id="排错解决"><a href="#排错解决" class="headerlink" title="排错解决"></a>排错解决</h3><p>SSH 上去 check 一下</p>
<pre><code>vcsa:~ # /etc/init.d/vsphere-client status
VMware vSphere Web Client is running: PID:14701, Wrapper:STARTED, Java:STARTED
</code></pre><p>正在运行，但页面就是打不开。<br>重启服务试试</p>
<pre><code>vcsa:~ # /etc/init.d/vsphere-client restart
</code></pre><p>等一分钟左右，刷新页面，登录界面出来了</p>
<p>除此之外，遇到别的异常可考虑重启对应的功能模块来尝试解决修复</p>
<h3 id="vCSA-服务列表"><a href="#vCSA-服务列表" class="headerlink" title="vCSA 服务列表"></a>vCSA 服务列表</h3><table>
<thead>
<tr>
<th>服务名称</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>applmgmt</td>
<td>VMware Appliance Management Service</td>
</tr>
<tr>
<td>vmware-cis-license</td>
<td>VMware License Service</td>
</tr>
<tr>
<td>vmware-cm</td>
<td>VMware Component Manager</td>
</tr>
<tr>
<td>vmware-eam</td>
<td>VMware ESX Agent Manager</td>
</tr>
<tr>
<td>vmware-sts-idmd</td>
<td>VMware Identity Management Service</td>
</tr>
<tr>
<td>vmware-invsvc</td>
<td>VMware Inventory Service</td>
</tr>
<tr>
<td>vmware-mbcs</td>
<td>VMware Message Bus Configuration Service</td>
</tr>
<tr>
<td>vmware-netdumper</td>
<td>VMware vSphere ESXi Dump Collector</td>
</tr>
<tr>
<td>vmware-perfcharts</td>
<td>VMware Performance Charts</td>
</tr>
<tr>
<td>vmware-rbd-watchdog</td>
<td>VMware vSphere Auto Deploy Waiter</td>
</tr>
<tr>
<td>vmware-rhttpproxy</td>
<td>VMware HTTP Reverse Proxy</td>
</tr>
<tr>
<td>vmware-sca</td>
<td>VMware Service Control Agent</td>
</tr>
<tr>
<td>vmware-sps</td>
<td>VMware vSphere Profile-Driven Storage Service</td>
</tr>
<tr>
<td>vmware-stsd</td>
<td>VMware Security Token Service</td>
</tr>
<tr>
<td>vmware-syslog</td>
<td>VMware Common Logging Service</td>
</tr>
<tr>
<td>vmware-syslog-health</td>
<td>VMware Syslog Health Service</td>
</tr>
<tr>
<td>vmware-vapi-endpoint</td>
<td>VMware vAPI Endpoint</td>
</tr>
<tr>
<td>vmware-vdcs</td>
<td>VMware Content Library Service</td>
</tr>
<tr>
<td>vmafdd</td>
<td>VMware Authentication Framework</td>
</tr>
<tr>
<td>vmcad</td>
<td>VMware Certificate Service</td>
</tr>
<tr>
<td>vmdird</td>
<td>VMware Directory Service</td>
</tr>
<tr>
<td>vmware-vpostgres</td>
<td>VMware Postgres</td>
</tr>
<tr>
<td>vmware-vpx-workflow</td>
<td>VMware vCenter Workflow Manager</td>
</tr>
<tr>
<td>vmware-vpxd</td>
<td>VMware vCenter Server</td>
</tr>
<tr>
<td>vmware-vsm</td>
<td>VMware vService Manager</td>
</tr>
<tr>
<td>vsphere-client</td>
<td>vSphere Web Client</td>
</tr>
<tr>
<td>vmware-vws</td>
<td>VMware System and Hardware Health Manager</td>
</tr>
<tr>
<td>vmware-vsan-health</td>
<td>VMware vSAN Health Service</td>
</tr>
</tbody>
</table>
<h3 id="其它命令"><a href="#其它命令" class="headerlink" title="其它命令"></a>其它命令</h3><p>运行以下命令以列出 vCenter Server Appliance 服务：</p>
<p>service-control –list</p>
<p>要查看 vCenter Server Appliance 服务的当前状态，请键入以下命令：</p>
<p>service-control –status</p>
<p>运行以下命令以启动特定服务：</p>
<p>service-control –startservicename</p>
<p>也可以键入以下命令启动所有服务：</p>
<p>service-control –start –all</p>
<p>要执行该命令的预演，请将–dry-run选项添加到该命令。此时将显示该命令将运行哪些操作，而不执行这些操作。例如，键入以下命令：</p>
<p>service-control –start –all –dry-run</p>
<p>运行以下命令以停止特定服务：</p>
<p>service-control –stopservicename</p>
<p>也可以键入以下命令停止所有服务：</p>
<p>service-control –stop –all</p>
<p>要执行该命令的预演，请将–dry-run选项添加到该命令。此时将显示该命令将运行哪些操作，而不执行这些操作。例如，键入以下命令：</p>
<p>service-control –stop –all –dry-run</p>
<p>也可以键入以下命令停止所有服务：</p>
<p>service-control –stop –all</p>
<p>运行以下命令以启动特定服务：</p>
<p>service-control –startservicename</p>
<p>也可以键入以下命令启动所有服务：</p>
<p>service-control –start –all</p>
<p>服务列表以及其它命令来自官方 <a href="https://kb.vmware.com/selfservice/microsites/search.do?language=en_US&amp;cmd=displayKC&amp;externalId=2115730" target="_blank" rel="external">KB2115730</a></p>
]]></content>
      
        <categories>
            
            <category> 虚拟化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 虚拟化 </tag>
            
            <tag> VCSA </tag>
            
            <tag> 排障 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[另类方式实现 VCS5.5 安全有效地"升级"至 vCSA6.0]]></title>
      <url>/2016/10/13/vc5-upto-vcsa6/</url>
      <content type="html"><![CDATA[<h2 id="常规升级方式"><a href="#常规升级方式" class="headerlink" title="常规升级方式"></a>常规升级方式</h2><p>VCS (vCenter Server for Windows)平滑升级到 vCSA (vCenter Server Appliance) ？ 对不起，这种操作在6.0之前 官方文档是不存在的。<br>VCS 是运行在 Windows 之上的虚拟化管理程序，而 vCSA 是运行在 Linux 上的，且是由 VMWare 定制开发好的appliance ，这也是 vCSA 的 <strong>A</strong>。两者的管理功能在6.0后几乎一样，但却是使用的底层操作系统，中间件，数据库都有极大的不同，无法平滑升级，数据无法从 VCS 导出，然后导入到 vCSA ，当中涉及到太多利害关系了，光网络和数据库就够你喝一壶（ps:vCSA比VCS 部署和架构都简单，而且能省掉M$的License）虽然之前在Flings 上有大神做了一个 <a href="https://labs.vmware.com/flings/vcs-to-vcva-converter" target="_blank" rel="external">VCS to VCVA Converter</a> 的转换程序，之后正式被官方集成生产——<a href="http://www.virtuallyghetto.com/2016/09/vcenter-server-appliance-vcsa-migration-tool-officially-gas-wvsphere-6-0-update-2m.html" target="_blank" rel="external">vCenter Server Appliance (VCSA) Migration Tool officially GAs w/vSphere 6.0 Update 2m</a></p>
<h2 id="我的方式"><a href="#我的方式" class="headerlink" title="我的方式"></a>我的方式</h2><p> <a href="https://labs.vmware.com/flings/vcs-to-vcva-converter" target="_blank" rel="external">VCS to VCVA Converter</a> 很早之前我就做了实验去验证，那时候实验环境比较简单，所以试了两次后，便完成验证了。在接触到复杂的虚拟化环境后，我开始考虑到这个物件的不确定性了，每个环境的管理者的技术水平都不是同一水平的，因此环境变得不可捉摸，如果有别的物件如监控，备份的依赖 VCS ，那转换成 VCSA 就很可能发生不可预测的错误，转换失败虽然不会破坏 VCS 的数据，但转换过程需要把 VCS 关机 ，但做我们这一行，很忌讳服务器关机/重启，因为很可能就启动不了或者启动失败。整好，目前我管理的虚拟化环境VCS 5.5 有升级到 VCSA 的需求，而且环境巨复杂，简单的说一下：</p>
<ol>
<li>有4个集群，有的集群多达 30 个 ESXI-HOST 主机，几乎是vSphere 5.5 的最高配置。</li>
<li>每个集群独立的 VDS (虚拟分布式交换机)，总 VDP （分布式端口组）超过 200 个</li>
<li>每个 VDS 都关联了两个上联口</li>
<li>总 VM 数量超过 1000 个</li>
<li><p>每个 VM 的网卡都挂载了一个 VDP （分布式端口组），可怕吧·····</p>
<p>因此我在寻求一种平滑升级的方式，尽量的、原生的，可持续的完成VCSA 接管 VCS 的ESXI、VM、分布式虚拟网络配置等。<br>后来在 PowerCLI 上看到了可能</p>
</li>
</ol>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>利用跑业务流量的双网卡冗余特点，编写脚本实现精准切换端口组</p>
<ol>
<li>先部署 VCSA6.0（已部署）</li>
<li>在 VCSA 上创建与 VC一样的集群架构，以及分布式交换机的端口组一致（脚本保证一致性）</li>
<li>通过脚本控制 VDS (分布式端口组)-&gt; VSS (标准端口组)的精准切换（保证端口组的影响降到最低）</li>
<li>把 ESXI 注册到 VCSA 上，VM 绑定在 VSS，注册过程不受影响</li>
<li>通过脚本回切端口组（VSS -&gt; VDS）</li>
</ol>
<p>迁移图示</p>
<p><img src="https://pek3a.qingstor.com/mynotes/vc-to-vcsa.png" alt="image"></p>
<h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><p>除了第一步，其余步骤均是通过脚本实现以 ESXI 为单位逐台注册到 VCSA，随时可中断回滚，为了解决 VDS 与 VM 之间的关联关系，VM 先绑定在 VSS 上，脱离了对 VDS的影响。一切变更操作设计以保护VM链路不中断为原则；<br>整个变更中，基本上是管理上的调整，不会改变ESXI既定的物理网络配置</p>
<h3 id="难点"><a href="#难点" class="headerlink" title="难点"></a>难点</h3><p>因为涉及到 VM 网卡上的端口组配置变换，必须保证绝对的精准记录每个 VM 网卡上面的 连接的端口组名称是什么，新建的 VDP 的 VLAN 号必须要跟原来的端口组 VLAN 号一致。我的解决办法是，导出这些配置，然后根据导出的内容，在新建的 VSS 上创建相应的端口组，且端口组名称尽量还是要增加标识来区分，来维护全局唯一的规则，这样降低报错和变更风险。</p>
<h3 id="风险"><a href="#风险" class="headerlink" title="风险"></a>风险</h3><p>正在变更的ESXI上负载的VM在切换端口组的时候可能会有1~2个丢包的影响，类似情况就是双线冗余的业务链路断开了一线，正在使用该链路的流量会从另一个冗余的链路过来。</p>
<h3 id="PowerCLI-脚本"><a href="#PowerCLI-脚本" class="headerlink" title="PowerCLI 脚本"></a>PowerCLI 脚本</h3><p>需要在PowerCLI把新旧两个VC都Login上<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$Cred</span> = <span class="built_in">get-credential</span></div><div class="line">Connect-VIServer <span class="string">"old-VC-address"</span> -Credential <span class="variable">$Cred</span>  -SaveCredentials -WarningAction SilentlyContinue</div><div class="line"><span class="variable">$Cred1</span> = <span class="built_in">get-credential</span></div><div class="line">Connect-VIServer <span class="string">"new-VC-address"</span> -Credential <span class="variable">$Cred1</span>  -SaveCredentials -WarningAction SilentlyContinue</div></pre></td></tr></table></figure></p>
<h4 id="公共参数"><a href="#公共参数" class="headerlink" title="公共参数"></a>公共参数</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#把之前导出的HOST-VM-PG-VMNIC-LIST.csv 导入到变量中---------这部分导入适用于需要从表获取信息配置的操作</span></div><div class="line"><span class="variable">$xpath</span> = <span class="built_in">split-path</span> -parent <span class="variable">$MyInvocation</span>.MyCommand.Definition</div><div class="line"><span class="variable">$CsvPath</span>= <span class="string">"<span class="variable">$xpath</span>\HOST-VM-PG-VMNIC-LIST.csv"</span></div><div class="line"><span class="variable">$vmlists</span> = <span class="built_in">Import-Csv</span> <span class="variable">$CsvPath</span> -encoding Default | ?&#123;<span class="variable">$_</span>.deploy <span class="nomarkup">-like</span> <span class="string">"*Y*"</span> -and <span class="variable">$_</span>.VMHOST <span class="nomarkup">-eq</span> <span class="variable">$vmhost</span>&#125; -ErrorAction SilentlyContinue</div></pre></td></tr></table></figure>
<h4 id="生成-HOST-VM-PG-VMNIC-LIST"><a href="#生成-HOST-VM-PG-VMNIC-LIST" class="headerlink" title="生成 HOST-VM-PG-VMNIC-LIST"></a>生成 HOST-VM-PG-VMNIC-LIST</h4><p>靠人是记不住，也记不完的，所以要把目前的配置导出（VM、VMHOST、VMNAME、NICNAME、NICMAC、PGNAME、VLAN、VSSPG、VSSNIC 、VDSNIC、VDSNAME<br>）。<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#导出指定 ESXI 主机的信息</span></div><div class="line"><span class="keyword">param</span>(<span class="variable">$vmhost</span>)</div><div class="line"><span class="variable">$getvmhost</span> = get-vmhost <span class="variable">$vmhost</span> -ErrorAction SilentlyContinue</div><div class="line"><span class="variable">$getvds</span> = <span class="variable">$getvmhost</span> | Get-VDSwitch</div><div class="line"><span class="variable">$getcluster</span> = <span class="variable">$getvmhost</span> | Get-cluster</div><div class="line"><span class="variable">$getdc</span> = <span class="variable">$getvmhost</span> | Get-Datacenter</div><div class="line"><span class="comment">#获取 VDS 的端口组列表</span></div><div class="line"><span class="variable">$getvdspg</span> = <span class="variable">$getvmhost</span> | Get-VirtualPortGroup -Distributed</div><div class="line"><span class="comment">#获取 VDS 的上联口</span></div><div class="line"><span class="variable">$getvmnic</span> = <span class="variable">$getvds</span> | Get-VMHostNetworkAdapter | ?&#123;<span class="variable">$_</span>.VMHOST <span class="nomarkup">-like</span> <span class="variable">$vmhost</span>&#125;</div><div class="line"><span class="keyword">if</span>(<span class="variable">$getvmnic</span>.Count <span class="nomarkup">-eq</span> <span class="number">2</span>)</div><div class="line">&#123;<span class="comment">#获取 VDS 的两个上联口</span></div><div class="line">	<span class="variable">$vdsnic</span> = <span class="variable">$getvmnic</span>[<span class="number">0</span>].name</div><div class="line">	<span class="variable">$vssnic</span> = <span class="variable">$getvmnic</span>[<span class="number">1</span>].name</div><div class="line">&#125;</div><div class="line"><span class="keyword">else</span></div><div class="line">&#123;<span class="comment">#如果只有一个上联口，网络会中断的。</span></div><div class="line">	<span class="variable">$vssnic</span> = <span class="string">"none"</span></div><div class="line">	<span class="variable">$vdsnic</span> = <span class="variable">$getvmnic</span>[<span class="number">0</span>].name</div><div class="line">&#125;</div><div class="line"><span class="comment">#获取每个 VM 的 NETINFO</span></div><div class="line"><span class="keyword">foreach</span>(<span class="variable">$GETVM</span> <span class="keyword">in</span> <span class="variable">$getvmhost</span> | Get-vm)</div><div class="line">&#123;<span class="comment">#遍历 ESXI 主机上的每个 VM</span></div><div class="line">	<span class="keyword">foreach</span>(<span class="variable">$GETVMNIC</span> <span class="keyword">in</span> <span class="variable">$GETVM</span> | Get-NetworkAdapter)</div><div class="line">	&#123;<span class="comment">#遍历 VM 上的每个 VNIC</span></div><div class="line">		<span class="variable">$VMname</span> = <span class="variable">$GETVM</span>.name</div><div class="line">		<span class="variable">$nicname</span> = <span class="variable">$GETVMNIC</span>.Name</div><div class="line">		<span class="variable">$nicmac</span> = <span class="variable">$GETVMNIC</span>.MacAddress</div><div class="line">		<span class="variable">$pgname</span> = <span class="variable">$GETVMNIC</span>.NetworkName </div><div class="line">		<span class="variable">$Newvsspg</span> = <span class="string">"none"</span></div><div class="line">		<span class="variable">$PGVLAN</span> = <span class="string">"none"</span></div><div class="line">		<span class="keyword">if</span>(<span class="variable">$getvdspg</span>.name <span class="nomarkup">-contains</span> <span class="variable">$pgname</span>)</div><div class="line">		&#123;<span class="comment">#判断 PG 是否是分布式端口组，如果是，则定义新建的对应的 VSS PG</span></div><div class="line">			<span class="variable">$Newvsspg</span> = <span class="string">"VSS"</span> +<span class="variable">$GETVMNIC</span>.NetworkName</div><div class="line">			<span class="variable">$PG</span> = <span class="variable">$getvdspg</span> | ?&#123;<span class="variable">$_</span>.name <span class="nomarkup">-eq</span> <span class="variable">$pgname</span>&#125;</div><div class="line">			<span class="variable">$PGVLAN</span> = <span class="variable">$PG</span>.ExtensionData.Config.DefaultPortConfig.Vlan.VlanId</div><div class="line">		&#125;</div><div class="line">		<span class="comment">#导出 </span></div><div class="line">		<span class="variable">$Y</span> = <span class="string">"Y"</span></div><div class="line">		<span class="variable">$outlist</span> = [PSCustomObject]@&#123;</div><div class="line">		Deploy = <span class="variable">$Y</span></div><div class="line">		DC = <span class="variable">$getdc</span>.name</div><div class="line">		Cluster = <span class="variable">$getcluster</span>.name</div><div class="line">		VMHOST = <span class="variable">$vmhost</span></div><div class="line">		VMNAME = <span class="variable">$VMname</span></div><div class="line">		NICNAME = <span class="variable">$nicname</span></div><div class="line">		NICMAC = <span class="variable">$nicmac</span></div><div class="line">		PGNAME = <span class="variable">$pgname</span></div><div class="line">		VLAN = <span class="variable">$PGVLAN</span></div><div class="line">		VSSPG = <span class="variable">$Newvsspg</span></div><div class="line">		VSSNIC = <span class="variable">$vssnic</span></div><div class="line">		VDSNIC = <span class="variable">$vdsnic</span></div><div class="line">		VDSNAME = <span class="variable">$getvds</span>.name</div><div class="line">		&#125;</div><div class="line">		<span class="variable">$outlist</span> | <span class="built_in">Export-CSV</span> -Path <span class="variable">$CsvPath</span> -Append -NoTypeInformation -encoding Default</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="在新的VC创建对应的VDS以及VDPG"><a href="#在新的VC创建对应的VDS以及VDPG" class="headerlink" title="在新的VC创建对应的VDS以及VDPG"></a>在新的VC创建对应的VDS以及VDPG</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#因为集群可配置项比较多，每人的要求都不尽想停，没写自动创建集群，需要在新的VC上手动创建Cluster。</span></div><div class="line"><span class="comment">#新建VDS</span></div><div class="line"><span class="keyword">foreach</span>(<span class="variable">$creatvds</span> <span class="keyword">in</span> <span class="variable">$vmlists</span> | <span class="built_in">Select-Object</span> -Property DC,VDSNAME -Unique)</div><div class="line">&#123;<span class="comment">##指定一下VDS的版本</span></div><div class="line">    <span class="variable">$VER</span> = <span class="string">"5.5.0"</span> </div><div class="line">	<span class="variable">$DC</span> = <span class="variable">$creatvds</span>.DC</div><div class="line">	<span class="variable">$VDS</span> = <span class="variable">$creatvds</span>.VDSNAME</div><div class="line">	<span class="variable">$VDSinfo</span> = Get-VDSwitch <span class="variable">$VDS</span> -ErrorAction SilentlyContinue</div><div class="line">	<span class="keyword">if</span>(<span class="variable">$VDSinfo</span> <span class="nomarkup">-eq</span> <span class="literal">$null</span>)</div><div class="line">	&#123;<span class="comment">#如果没有VDS则创建</span></div><div class="line">		<span class="variable">$myDC</span> = Get-Datacenter -Name <span class="variable">$DC</span></div><div class="line">		New-VDSwitch -Name <span class="variable">$VDS</span> -Location <span class="variable">$myDC</span> -NumUplinkPorts <span class="number">2</span> -LinkDiscoveryProtocol <span class="string">"LLDP"</span> -LinkDiscoveryProtocolOperation <span class="string">"Listen"</span> -Version <span class="variable">$VER</span> -Confirm:<span class="literal">$false</span> -RunAsync | <span class="built_in">OUT-NULL</span></div><div class="line">		<span class="built_in">write-host</span> <span class="string">"<span class="variable">$DC</span> 创建 <span class="variable">$VDS</span> 成功。"</span> -f green</div><div class="line">	&#125;  </div><div class="line">&#125;</div><div class="line"><span class="comment">#获取现有的VDSPG清单</span></div><div class="line"><span class="variable">$VDSPG</span> = Get-VDPortgroup -VDSwitch <span class="string">"<span class="variable">$VDSNAME</span>"</span> | Where &#123; <span class="variable">$_</span>.Name <span class="nomarkup">-NotMatch</span> <span class="string">"-DVUplinks"</span> &#125;</div><div class="line"><span class="comment">#循环需要创建的VDPG清单</span></div><div class="line"><span class="keyword">foreach</span>(<span class="variable">$creatvdspg</span> <span class="keyword">in</span> <span class="variable">$vmlists</span> | <span class="built_in">Select-Object</span> -Property VDSNAME,VLAN,PGNAME -Unique)</div><div class="line">&#123;</div><div class="line">    <span class="variable">$VDS</span> = <span class="variable">$creatvdspg</span>.VDSNAME</div><div class="line">	<span class="variable">$PG</span> = <span class="variable">$creatvdspg</span>.PGNAME</div><div class="line">	<span class="variable">$VLAN</span> = <span class="variable">$creatvdspg</span>.VLAN</div><div class="line">	Get-VDSwitch -Name <span class="variable">$VDS</span> | New-VDPortgroup -Name <span class="variable">$PG</span> -NumPorts <span class="number">8</span> -VLanId <span class="variable">$VLAN</span> -RunAsync | <span class="built_in">OUT-NULL</span></div><div class="line">	<span class="built_in">write-host</span> <span class="string">"<span class="variable">$VDS</span> 创建 <span class="variable">$PG</span> 成功。"</span> </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="创建临时-VSW-标准虚拟交换机"><a href="#创建临时-VSW-标准虚拟交换机" class="headerlink" title="创建临时 VSW 标准虚拟交换机"></a>创建临时 VSW 标准虚拟交换机</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#操作指定的ESXI主机</span></div><div class="line"><span class="variable">$getvmhost</span> = get-vmhost <span class="variable">$vmhost</span> -ErrorAction SilentlyContinue</div><div class="line"></div><div class="line"><span class="comment">#临时的虚拟交换机的名称，如果冲突请修改后面的数字</span></div><div class="line"><span class="variable">$vssw</span> = <span class="string">"vSwitch2"</span> </div><div class="line"><span class="variable">$getvmhost</span> | New-VirtualSwitch -Name <span class="variable">$vssw</span> | <span class="built_in">out-null</span></div><div class="line"><span class="string">"<span class="variable">$vssw</span> 创建成功"</span></div><div class="line"><span class="built_in">Start-Sleep</span> -Seconds <span class="number">1</span></div><div class="line"><span class="comment">#获取相关对象 （已经创建的vsw，目前vsw所关联的nic，目前vds所关联的nic，目前vsw上已经存在的vpg）</span></div><div class="line"><span class="variable">$getvsw</span> = <span class="variable">$getvmhost</span> | Get-VirtualSwitch -Name <span class="variable">$vssw</span></div><div class="line"><span class="variable">$getvssvmnic</span> = <span class="variable">$getvsw</span> | Get-VMHostNetworkAdapter -Physical</div><div class="line"><span class="variable">$getvmnic</span> = <span class="variable">$getvmhost</span> | Get-VDSwitch | Get-VMHostNetworkAdapter | ?&#123;<span class="variable">$_</span>.VMHOST <span class="nomarkup">-like</span> <span class="variable">$vmhost</span>&#125;</div><div class="line"><span class="variable">$getvspg</span> = <span class="variable">$getvmhost</span> | Get-VirtualPortGroup -Standard</div><div class="line"></div><div class="line"><span class="comment">#根据之前导出的配置表，在新建的VSS上创建响应的端口组newvsspg</span></div><div class="line"><span class="keyword">foreach</span>(<span class="variable">$creatvsspg</span> <span class="keyword">in</span> <span class="variable">$vmlists</span> | <span class="built_in">Select-Object</span> -Property Deploy,VMHOST,VLAN,VSSPG -Unique)</div><div class="line">&#123;</div><div class="line">	<span class="variable">$vlanid</span> = <span class="variable">$creatvsspg</span>.VLAN</div><div class="line">	<span class="variable">$vsspg</span> = <span class="variable">$creatvsspg</span>.VSSPG</div><div class="line">	<span class="keyword">if</span>(<span class="variable">$vsspg</span> <span class="nomarkup">-eq</span> <span class="string">"none"</span>)</div><div class="line">	&#123;&#125;</div><div class="line">	<span class="keyword">elseif</span>(<span class="variable">$getvspg</span>.name <span class="nomarkup">-contains</span> <span class="variable">$vsspg</span>)</div><div class="line">	&#123;</div><div class="line">		<span class="string">"<span class="variable">$vsspg</span> 已存在,跳过"</span></div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		<span class="variable">$getvsw</span> | New-VirtualPortGroup -Name <span class="variable">$vsspg</span> -VLanId <span class="variable">$vlanid</span> -confirm:<span class="literal">$false</span> | <span class="built_in">Out-Null</span></div><div class="line">		<span class="string">"<span class="variable">$vsspg</span> 创建成功"</span></div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">if</span>(<span class="variable">$getvssvmnic</span>.count <span class="nomarkup">-eq</span> <span class="number">0</span>)</div><div class="line">&#123;<span class="comment">#判断如果VSS没有挂载VMNIC,移除VDS的VSSNIC出来</span></div><div class="line">	<span class="keyword">foreach</span>(<span class="variable">$migratevmnic</span> <span class="keyword">in</span> <span class="variable">$vmlists</span> | <span class="built_in">Select-Object</span> -Property Deploy,VMHOST,VSSNIC,VDSNIC,VDSNAME -Unique)</div><div class="line">	&#123;<span class="comment">#迁移VDS-VMNIC到VSS-VMNIC</span></div><div class="line">		<span class="variable">$VSSNIC</span> = <span class="variable">$migratevmnic</span>.VSSNIC</div><div class="line">		<span class="variable">$VDSNIC</span> = <span class="variable">$migratevmnic</span>.VDSNIC</div><div class="line">		<span class="keyword">if</span>(<span class="variable">$VSSNIC</span> <span class="nomarkup">-eq</span> <span class="string">"none"</span> -or <span class="variable">$VDSNIC</span> <span class="nomarkup">-eq</span> <span class="string">"none"</span>)</div><div class="line">		&#123;<span class="string">"0"</span>&#125;</div><div class="line">		<span class="keyword">elseif</span>(<span class="variable">$getvmnic</span>.name <span class="nomarkup">-contains</span> <span class="variable">$VSSNIC</span> -and <span class="variable">$getvmnic</span>.name <span class="nomarkup">-contains</span> <span class="variable">$VDSNIC</span>)</div><div class="line">		&#123;<span class="comment">#必须两个 VMNIC 都在 VDS-UPLINK 中才能移除 VSSNIC,并挂载到 VSSW</span></div><div class="line">			<span class="variable">$getvmhost</span> | Get-VMHostNetworkAdapter -Physical -Name <span class="variable">$VSSNIC</span> | Remove-VDSwitchPhysicalNetworkAdapter -confirm:<span class="literal">$false</span></div><div class="line">			<span class="variable">$getvssnic</span> = <span class="variable">$getvmhost</span> | Get-VMHostNetworkAdapter -Physical -Name <span class="variable">$VSSNIC</span></div><div class="line">			<span class="variable">$getvsw</span> | Add-VirtualSwitchPhysicalNetworkAdapter -VMHostPhysicalNic <span class="variable">$getvssnic</span> -confirm:<span class="literal">$false</span></div><div class="line">		&#125;</div><div class="line">		<span class="keyword">elseif</span>(<span class="variable">$getvmnic</span>.name <span class="nomarkup">-notcontains</span> <span class="variable">$VSSNIC</span> -and <span class="variable">$getvmnic</span>.name <span class="nomarkup">-contains</span> <span class="variable">$VDSNIC</span>)</div><div class="line">		&#123;<span class="comment">#如已经移除则挂载 VSSNIC 到 VSSW</span></div><div class="line">			<span class="variable">$getvssnic</span> = <span class="variable">$getvmhost</span> | Get-VMHostNetworkAdapter -Physical -Name <span class="variable">$VSSNIC</span></div><div class="line">			<span class="variable">$getvsw</span> | Add-VirtualSwitchPhysicalNetworkAdapter -VMHostPhysicalNic <span class="variable">$getvssnic</span> -confirm:<span class="literal">$false</span></div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">else</span></div><div class="line">&#123;</div><div class="line">	<span class="built_in">read-host</span> <span class="string">"<span class="variable">$vssw</span> 已存在 <span class="variable">$getvssvmnic</span> "</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="重定向VM的NIC端口组至VSS端口组"><a href="#重定向VM的NIC端口组至VSS端口组" class="headerlink" title="重定向VM的NIC端口组至VSS端口组"></a>重定向VM的NIC端口组至VSS端口组</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">foreach</span>(<span class="variable">$vmlist</span> <span class="keyword">in</span> <span class="variable">$vmlists</span> | <span class="built_in">Select-Object</span> -Property PGNAME,VSSPG -Unique)</div><div class="line">&#123;</div><div class="line">	<span class="variable">$PGNAME</span>	= <span class="variable">$vmlist</span>.PGNAME</div><div class="line">	<span class="variable">$VSSPG</span>	= <span class="variable">$vmlist</span>.VSSPG</div><div class="line">	<span class="keyword">if</span>(<span class="variable">$VSSPG</span> <span class="nomarkup">-ne</span> <span class="string">"none"</span>)</div><div class="line">	&#123;<span class="comment">#把该ESXI上的VDSPG迁移到VSSPG上, PG by PG</span></div><div class="line">		<span class="variable">$getvmhost</span> | Get-VM | Get-NetworkAdapter | ?&#123;<span class="variable">$_</span>.NetworkName <span class="nomarkup">-eq</span> <span class="variable">$PGNAME</span>&#125; | Set-NetworkAdapter -NetworkName <span class="variable">$VSSPG</span> -Confirm:<span class="literal">$false</span> -RunAsync | <span class="built_in">out-null</span></div><div class="line">		<span class="string">"<span class="variable">$getvmhost</span> <span class="variable">$PGNAME</span> ==&gt; <span class="variable">$VSSPG</span>  DONE."</span></div><div class="line">		<span class="comment">#这一步会把操作的ESXI-HOST 上所有关联到VDSPG的VM-NIC，重定向关联到VSSPG上</span></div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="移除-新建分布式交换机"><a href="#移除-新建分布式交换机" class="headerlink" title="移除/新建分布式交换机"></a>移除/新建分布式交换机</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$VDSinfo</span> =  <span class="variable">$vmlists</span> | <span class="built_in">Select-Object</span> -Property VDSNIC,VDSNAME -Unique</div><div class="line"><span class="variable">$VDSNIC</span> = <span class="variable">$vdsinfo</span>.VDSNIC</div><div class="line"><span class="variable">$VDSNAME</span> = <span class="variable">$vdsinfo</span>.VDSNAME</div><div class="line"><span class="variable">$getvdsw</span> = Get-VDSwitch <span class="variable">$VDSNAME</span></div><div class="line"><span class="keyword">if</span>(<span class="variable">$getvds</span> <span class="nomarkup">-ne</span> <span class="string">"none"</span>)</div><div class="line">&#123;<span class="comment">#如果还没有移除则</span></div><div class="line">	<span class="variable">$getvdsw</span> | Remove-VDSwitchVMHost -VMHost <span class="variable">$getvmhost</span> -Confirm:<span class="literal">$false</span></div><div class="line">	<span class="built_in">read-host</span> <span class="string">"已移除VDS,确认再从VC中移除<span class="variable">$vmhost</span> 则按回车继续"</span></div><div class="line">	Set-VMHost -VMHost <span class="variable">$getvmhost</span> -State <span class="string">"Disconnected"</span> | <span class="built_in">out-null</span></div><div class="line">&#125;</div><div class="line"><span class="keyword">else</span></div><div class="line">&#123;<span class="comment">#如果没有注册到新的VDS..</span></div><div class="line">	<span class="variable">$getvdsw</span> |  Add-VDSwitchVMHost -VMHost <span class="variable">$getvmhost</span></div><div class="line">	<span class="variable">$GETVMHOSTNIC</span> = <span class="variable">$getvmhost</span> | Get-VMHostNetworkAdapter -Physical -Name <span class="variable">$VDSNIC</span></div><div class="line">	<span class="variable">$getvdsw</span> | Add-VDSwitchPhysicalNetworkAdapter -VMHostNetworkAdapter <span class="variable">$GETVMHOSTNIC</span> -Confirm:<span class="literal">$false</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="添加ESXI到指定的位置"><a href="#添加ESXI到指定的位置" class="headerlink" title="添加ESXI到指定的位置"></a>添加ESXI到指定的位置</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span>(!<span class="variable">$getvmhost</span>  <span class="nomarkup">-eq</span> <span class="literal">$null</span>)</div><div class="line">&#123;<span class="comment">#使用ESXI的凭据 添加到新的VC指定的位置</span></div><div class="line">	<span class="variable">$users</span>=<span class="string">"root"</span></div><div class="line">	<span class="variable">$password</span>=<span class="string">"password"</span></div><div class="line">	<span class="variable">$Datacenter</span> = <span class="string">"Datacenter"</span></div><div class="line">	<span class="variable">$Cluster</span> = <span class="string">"Cluster"</span></div><div class="line">	<span class="built_in">read-host</span> <span class="string">"按回车确认添加 <span class="variable">$vmhost</span> 到 <span class="variable">$Datacenter</span> 集群 <span class="variable">$Cluster</span> 吗?! 请等待添加完成后再执行任务4 "</span></div><div class="line">	Add-VMHost -Name <span class="variable">$vmhost</span> -Location (Get-Datacenter <span class="variable">$Datacenter</span> | get-cluster <span class="variable">$Cluster</span>)  -User <span class="variable">$users</span> -Password <span class="variable">$password</span> -force:<span class="literal">$true</span> -RunAsync -Confirm:<span class="literal">$false</span> | <span class="built_in">Out-Null</span></div><div class="line">	<span class="built_in">Start-Sleep</span> -Seconds <span class="number">30</span></div><div class="line">	<span class="comment">#完成后最好等个 30 秒。因为新的 ESXI 加入集群要初始化 HA 状态</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="重定向VM的NIC端口组至VDS端口组"><a href="#重定向VM的NIC端口组至VDS端口组" class="headerlink" title="重定向VM的NIC端口组至VDS端口组"></a>重定向VM的NIC端口组至VDS端口组</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">foreach</span>(<span class="variable">$vmlist</span> <span class="keyword">in</span> <span class="variable">$vmlists</span> | <span class="built_in">Select-Object</span> -Property PGNAME,VSSPG,VSSNIC,VDSNAME -Unique)</div><div class="line">&#123;</div><div class="line">	<span class="variable">$PGNAME</span>	= <span class="variable">$vmlist</span>.PGNAME</div><div class="line">	<span class="variable">$VSSPG</span>	= <span class="variable">$vmlist</span>.VSSPG</div><div class="line">	<span class="variable">$VSSNIC</span> = <span class="variable">$vmlist</span>.VSSNIC</div><div class="line">	<span class="variable">$VDSNAME</span> = <span class="variable">$vmlist</span>.VDSNAME</div><div class="line">	<span class="comment">#把该ESXI上的VSSPG迁移到VDSPG上,按PG来</span></div><div class="line">	<span class="keyword">if</span>(<span class="variable">$VSSPG</span> <span class="nomarkup">-ne</span> <span class="string">"none"</span>)</div><div class="line">	&#123;</div><div class="line">		<span class="variable">$getvmhost</span> | Get-VM |Get-NetworkAdapter | ?&#123;<span class="variable">$_</span>.NetworkName <span class="nomarkup">-eq</span> <span class="variable">$VSSPG</span>&#125; | Set-NetworkAdapter -NetworkName <span class="variable">$PGNAME</span> -Confirm:<span class="literal">$false</span> -RunAsync | <span class="built_in">out-null</span></div><div class="line">		<span class="string">"<span class="variable">$getvmhost</span> <span class="variable">$VSSPG</span>  ==&gt;  <span class="variable">$PGNAME</span> DONE."</span></div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="built_in">Start-Sleep</span> -Seconds <span class="number">3</span></div><div class="line"><span class="comment">#检查VSW上还有没有没被处理的VM</span></div><div class="line"><span class="variable">$vssw</span> = <span class="string">"vSwitch2"</span> </div><div class="line"><span class="variable">$getvdsw</span> = Get-VDSwitch <span class="variable">$VDSNAME</span></div><div class="line"><span class="variable">$getvssw</span> =  Get-VirtualSwitch <span class="variable">$getvmhost</span> -Name <span class="variable">$vssw</span></div><div class="line"><span class="variable">$vspgnum</span> = <span class="variable">$getvssw</span> | Get-VirtualPortGroup</div><div class="line"><span class="variable">$vspgvmnum</span> = <span class="variable">$getvssw</span> | Get-VM</div><div class="line"><span class="variable">$vmnum</span> = <span class="variable">$vspgvmnum</span>.count</div><div class="line"><span class="string">" <span class="variable">$vssw</span> 上共有 <span class="variable">$vmnum</span> 个VM ,如果存在VM,请检查"</span></div><div class="line"><span class="built_in">read-host</span> <span class="string">"按回车确认移除VSS,并把<span class="variable">$VSSNIC</span> 添加至 VDS <span class="variable">$VDSNAME</span>"</span></div><div class="line"><span class="keyword">if</span>(<span class="variable">$vspgvmnum</span>.Count <span class="nomarkup">-eq</span> <span class="number">0</span>)</div><div class="line">&#123;<span class="comment">#只有VSSPG上没有挂载VM,才可以移除VSSPG,归还VMNIC给VDS</span></div><div class="line">	Remove-VirtualSwitch -VirtualSwitch <span class="variable">$getvssw</span> -Confirm:<span class="literal">$false</span></div><div class="line">	<span class="variable">$GETVMHOSTNIC</span> = <span class="variable">$getvmhost</span> | Get-VMHostNetworkAdapter -Physical -Name <span class="variable">$VSSNIC</span></div><div class="line">	<span class="variable">$getvdsw</span> | Add-VDSwitchPhysicalNetworkAdapter -VMHostNetworkAdapter <span class="variable">$GETVMHOSTNIC</span> -Confirm:<span class="literal">$false</span></div><div class="line">	<span class="string">"移除VSS, <span class="variable">$VSSNIC</span> 添加至 VDS <span class="variable">$VDSNAME</span> DONE"</span></div><div class="line">&#125;</div><div class="line"><span class="keyword">else</span></div><div class="line">&#123;</div><div class="line">	<span class="string">"<span class="variable">$vssw</span> 上连接了 <span class="variable">$vmnum</span> 个VM ,请检查并移除后继续"</span></div><div class="line">	<span class="built_in">read-host</span></div><div class="line">	<span class="variable">$vspgvmnum</span> = <span class="variable">$getvssw</span> | Get-VM</div><div class="line">	<span class="keyword">if</span>(<span class="variable">$vspgvmnum</span>.Count <span class="nomarkup">-eq</span> <span class="number">0</span>)</div><div class="line">	&#123;<span class="comment">#直到VSSPG上没有挂载VM</span></div><div class="line">		Remove-VirtualSwitch -VirtualSwitch <span class="variable">$getvssw</span> -Confirm:<span class="literal">$false</span></div><div class="line">		<span class="variable">$GETVMHOSTNIC</span> = <span class="variable">$getvmhost</span> | Get-VMHostNetworkAdapter -Physical -Name <span class="variable">$VSSNIC</span></div><div class="line">		<span class="variable">$getvdsw</span> | Add-VDSwitchPhysicalNetworkAdapter -VMHostNetworkAdapter <span class="variable">$GETVMHOSTNIC</span> -Confirm:<span class="literal">$false</span></div><div class="line">		<span class="string">"移除VSS, <span class="variable">$VSSNIC</span> 添加至 VDS <span class="variable">$VDSNAME</span> DONE"</span></div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="简单新建代替会死吗？"><a href="#简单新建代替会死吗？" class="headerlink" title="简单新建代替会死吗？"></a>简单新建代替会死吗？</h2><p>当我提出这个方案的时候，很多人问我的一个问题。<br>其实并不会死，指示会让你麻烦死。<br>首先，肯定不能直接在集群里移除ESXI，你只能断开连接这个ESXI<br>其次，未从 VDS 移除 ESXI ，ESXI 会残留这原来的VDS信息，直接去注册到别的 VDS ，你需要替换对应的端口组，但很不幸的告诉你，这个时候你已经无法看到VM的网卡原来关联的端口组名称是什么了，这会让你的运维带来困境。万一你选错关联的端口组。VM 的网络会中断。</p>
<h2 id="运行好好的为什么升级？"><a href="#运行好好的为什么升级？" class="headerlink" title="运行好好的为什么升级？"></a>运行好好的为什么升级？</h2><p>通过从 VC5.5 升级到使用 VCSA6.0 可获得以下收益。</p>
<ul>
<li>支持更大的集群规模，支持 64 个主机组成集群</li>
<li>为后续ESXi5.5 升级到 ESXi6.0 夯实基础</li>
<li>节约额外的授权费用（VC需要Windows，sql server授权，VCSA则不需要）</li>
<li>节省独占物理主机的运营成本</li>
<li>部署 VCSA 比 VC 要更快</li>
<li>日常运行效率更高</li>
<li>可获得虚拟机的高可用，数据保护，中高端存储的性能优势</li>
<li>灵活的增配VC资源</li>
<li>两个VC共享验证凭据，SSO单点登陆</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 虚拟化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> PowerCLI </tag>
            
            <tag> vCenter </tag>
            
            <tag> vCSA </tag>
            
            <tag> 虚拟化 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[集中式存储 VS 分布式存储]]></title>
      <url>/2016/06/05/storage-share-vs-distribute/</url>
      <content type="html"><![CDATA[<table>
<thead>
<tr>
<th>类型</th>
<th>特点</th>
<th>优点</th>
<th>缺点</th>
</tr>
</thead>
<tbody>
<tr>
<td>集中式存储</td>
<td>存储设备集中在一起管理，由单一存储甚至是几个大型存储设备，分配存储资源给众多服务器使用，资源隔离细粒度有限。</td>
<td>1. 产品丰富，买来即用。<br> 2. 单一性能可以堆到很高，一荣俱荣。<br> 3. 市场成熟，商业化产品互操性、兼容性佳。<br></td>
<td>1. 数据处理集中，全局影响，不适合多租户；<br> 2. 烟囱式扩展. 硬件捆绑. 成本昂贵；<br> 3. 架构复杂，故障排查难度大；<br> 4. 资源捆绑. 一损俱损；<br> 5. 建设周期长，无法快速供给；<br> </td>
</tr>
<tr>
<td>分布式存储</td>
<td>软件定义存储，利用X86服务器本地磁盘与高速网络结合，形成一个大的存储资源池，基于这个资源池可以衍生多种存储类型，如对象存储，随着节点规模越大，性能线性水平增长，特别适合大规模数据中心，多租户场景</td>
<td>1. 架构简单、扩展性极强，易于管理，自动化程度高。<br> 2. 数据分散在不同服务器上形成冗余级数据保护。<br> 3. 采用本地IO路径，路径更短，延迟更低。<br> 4. 标准X86服务器和磁盘组成，低成本，采购周期短。</td>
<td>1. 需要高速低延迟网络环境<br> 2. 需要多个以上节点组成<br> 3. 要有一定的运维能力和自动化程度的环境</td>
</tr>
</tbody>
</table>
]]></content>
      
        <categories>
            
            <category> 存储 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 存储 </tag>
            
            <tag> 集中式存储 </tag>
            
            <tag> 分布式存储 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[主流计算虚拟化技术对比]]></title>
      <url>/2016/04/02/virtualization-tech-comparison/</url>
      <content type="html"><![CDATA[<h2 id="VMWare"><a href="#VMWare" class="headerlink" title="VMWare"></a>VMWare</h2><p>产品形态：商用<br>产品代表：vSphere ESXi、Workstation<br>特点：产品成熟稳定，企业级市场份额最大；对计算（CPU/内存）的管理调度有特别好的优化<br>优势：</p>
<ol>
<li>功能，产品线丰富，是行业的标杆</li>
<li>稳定成熟，通用，虚拟效率高</li>
<li>支持虚拟多种X86类型系统</li>
</ol>
<p>劣势：</p>
<ol>
<li>大规模部署下成本昂贵</li>
<li>自动化、二次开发成本高，需要研发人力</li>
</ol>
<p>应用范围：</p>
<ol>
<li>私有云：70%中小型企业首选</li>
<li>公有云：天翼公有云</li>
</ol>
<h2 id="Hyper-V"><a href="#Hyper-V" class="headerlink" title="Hyper-V"></a>Hyper-V</h2><p>产品形态：商用<br>产品代表：Windows Server 2008/2012/2016<br>特点：微内核架构<br>优势：</p>
<ol>
<li>设备驱动跟内核松耦合</li>
<li>微内核架构，代码少，初始化快</li>
<li>对WINDOWS支持更佳</li>
</ol>
<p>劣势：</p>
<ol>
<li>成本昂贵，需要企业版许可</li>
<li>没有API接口，修复补丁多</li>
<li>架构复杂，对资源和管理、故障迁移有待提高</li>
<li>对LINUX支持不是很好</li>
</ol>
<p>应用范围：</p>
<ol>
<li>小部分中小型企业基于成本考虑使用</li>
<li>微软 AZURE （未确定）</li>
</ol>
<h2 id="KVM"><a href="#KVM" class="headerlink" title="KVM"></a>KVM</h2><p>产品形态：开源<br>产品代表：OpenStack<br>特点：定制性强，免费<br>优势：</p>
<ol>
<li>社区庞大，资源丰富</li>
<li>免费，使用成本低</li>
<li>有大规模部署的实践验证</li>
<li>集成到LINUX内核中</li>
</ol>
<p>劣势：</p>
<ol>
<li>深度调优，虚拟化效率才高</li>
<li>单独使用功能有限，需要配置多个组件实现功能，开发能力要求高多</li>
</ol>
<p>应用范围：</p>
<ol>
<li>私有云：技术开发实力强的互联网公司，小米，唯品会</li>
<li>公有云：腾讯云，阿里云（新的数据中心已经采用 KVM 技术），青云，Ucloud等</li>
</ol>
<h2 id="XEN"><a href="#XEN" class="headerlink" title="XEN"></a>XEN</h2><p>产品形态：开源<br>产品代表：CloudStack<br>特点：定制性强，免费<br>优势：</p>
<ol>
<li>社区庞大，资源丰富</li>
<li>免费，使用成本低</li>
<li>有大规模部署的实践验证</li>
</ol>
<p>劣势：</p>
<ol>
<li>深度调优，虚拟化效率才高</li>
<li>单独使用功能有限，需要配置多个组件实现功能，开发能力要求高多</li>
</ol>
<p>应用范围：</p>
<ol>
<li>私有云：华为（基于思杰的 XEN 技术，目前已经开发 KVM 版本）</li>
<li>公有云：AWS，阿里云（准备转 KVM 架构）</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 虚拟化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 虚拟化 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[使用 Powershell 远程管理服务器]]></title>
      <url>/2015/11/18/powershell-mag-remote-host/</url>
      <content type="html"><![CDATA[<h2 id="管理环境-条件"><a href="#管理环境-条件" class="headerlink" title="管理环境-条件"></a>管理环境-条件</h2><ul>
<li><p>远程服务器（客户端）</p>
<p>  默认情况下，PowerShell 禁止 PowerShell 脚本在 Windows 系统中执行。需要修改策略来解除。</p>
</li>
</ul>
<ol>
<li><p>PowerShell 管理员模式下执行：</p>
 <figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">Set-ExecutionPolicy</span> bypass</div></pre></td></tr></table></figure>
</li>
<li><p>启用远程处理模式</p>
 <figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">Enable-PSRemoting</span> -force</div></pre></td></tr></table></figure>
</li>
</ol>
<ul>
<li>管理服务器（管理端）</li>
</ul>
<ol>
<li>添加信任列表，PowerShell 管理员模式下执行： <figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">Set-Item</span> WSMan:\localhost\Client\TrustedHosts -Value * -force</div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h2><p>远程操作主要依赖几个Session（会话）命令和Invoke-Command命令来进行。总结下</p>
<ol>
<li><p>Enter-PSSession 远程交互式会话</p>
<p> 这个场景一般用于手动进行远程操作，输入命令，查看结果。方法很简单。进入交互式会话的命令是Enter-PSSession，退出时键入Exit-PSSession或者exit都可以。远程交互式操作期间，输入的命令在远程计算机上运行，就像直接在远程计算机上输入并执行这些命令一样。期间所定义的变量和命令的执行结果在退出交互式会话之后不再可用。</p>
</li>
<li><p>New-pssession 建立会话执行一次性操作</p>
<p>这种在本地计算机与远程计算机上建立一个临时会话。将脚本块或者脚本文件的内容发送到远程计算机执行，并将结果发回本地计算机。这种方法执行效率很高，是PowerShell推荐的执行远程命令的方法。除非需要在会话中共享数据，否则建议使用该使用方法。注意，会话数量是有限制的，用完务必释放会话。</p>
</li>
<li><p>Invoke-Command 命令/脚本在命名会话中执行</p>
<p> 用 New-pssession 建立会话并保存到一个变量中，然后在Invoke-Command中指定会话使用该变量。可将执行结果赋予到新的变量中<br> 格式：</p>
 <figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$sub</span> = <span class="built_in">Invoke-Command</span> -Session <span class="variable">$session1</span> -ScriptBlock &#123;dir c:\&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><p>PowerShell 在网络处理方面有诸多限制。比如 PowerShell 不能在远程机器上显示界面，即使是有界面的程序，也只能在后台运行。</p>
]]></content>
      
        <categories>
            
            <category> Powershell </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Powershell </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[虚拟化是什么]]></title>
      <url>/2014/08/08/virtualization-evo/</url>
      <content type="html"><![CDATA[<h2 id="引用WIKI"><a href="#引用WIKI" class="headerlink" title="引用WIKI"></a>引用WIKI</h2><blockquote>
<p>在计算机技术中，虚拟化（技术）或虚拟技术（英语：Virtualization）是一种资源管理技术，是将计算机的各种实体资源（CPU、内存、磁盘空间、网络适配器等），予以抽象、转换后呈现出来并可供分区、组合为一个或多个电脑配置环境。由此，打破实体结构间的不可切割的障碍，使用户可以比原本的配置更好的方式来应用这些电脑硬件资源。这些资源的新虚拟部分是不受现有资源的架设方式，地域或物理配置所限制。一般所指的虚拟化资源包括计算能力和数据存储。</p>
</blockquote>
<p>虚拟化不是一个新技术，在上个世纪60年代就已经诞生了，真正在X86架构下广泛应用应该是在本世纪初由VMWare公司推出企业级vSphere 虚拟化软件产品，配合Intel 等厂商随着工艺的不断进步升级，物理服务器可以运行多个虚拟机，每个虚拟机可以负载不同的程序，极大的提高了物理服务器的资源利用率，同时也保持了程序之间隔离性。</p>
<h2 id="虚拟化技术解决了什么问题"><a href="#虚拟化技术解决了什么问题" class="headerlink" title="虚拟化技术解决了什么问题"></a>虚拟化技术解决了什么问题</h2><h2 id="虚拟化技术在那些领域中得到广泛应用"><a href="#虚拟化技术在那些领域中得到广泛应用" class="headerlink" title="虚拟化技术在那些领域中得到广泛应用"></a>虚拟化技术在那些领域中得到广泛应用</h2><h2 id="选择虚拟化的思考点"><a href="#选择虚拟化的思考点" class="headerlink" title="选择虚拟化的思考点"></a>选择虚拟化的思考点</h2><h3 id="极大的提高资源的利用率"><a href="#极大的提高资源的利用率" class="headerlink" title="极大的提高资源的利用率"></a>极大的提高资源的利用率</h3><h3 id="缩减了企业的IT成本"><a href="#缩减了企业的IT成本" class="headerlink" title="缩减了企业的IT成本"></a>缩减了企业的IT成本</h3><h3 id="创新、先进是企业在竞争中重要的决胜关键点"><a href="#创新、先进是企业在竞争中重要的决胜关键点" class="headerlink" title="创新、先进是企业在竞争中重要的决胜关键点"></a>创新、先进是企业在竞争中重要的决胜关键点</h3>]]></content>
      
        <categories>
            
            <category> 虚拟化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 虚拟化 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[关于这里]]></title>
      <url>/2014/07/13/hello-world/</url>
      <content type="html"><![CDATA[<h2 id="记录我在IT技术的道路上探索实践中的点点滴滴"><a href="#记录我在IT技术的道路上探索实践中的点点滴滴" class="headerlink" title="记录我在IT技术的道路上探索实践中的点点滴滴"></a>记录我在IT技术的道路上探索实践中的点点滴滴</h2><h3 id="目前专注方向-2017"><a href="#目前专注方向-2017" class="headerlink" title="目前专注方向-2017"></a>目前专注方向-2017</h3><p>VMWare：vSphere/Horizon 安装、部署、规划、设计、管理、自动化运维</p>
<p>开发：Powershell、PowerCLI、Pyhton</p>
<p>IDC基础设施：数据中心、机房机柜、服务器设备</p>
<p>数据管理：数据存储/管理/备份/复制/重删/压缩</p>
<p>扩展：基于VMWare环境的网络/存储/备份/灾备 </p>
<p>云计算工程技术：虚拟化技术、SDS、SDN、CMP、IAAS、PAAS</p>
]]></content>
      
        <categories>
            
            <category> 随手杂记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 杂记 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
